/*Save shader/load
log consol error under the view
info about the input parameters
import texture
create parameter*/


mat2 rotate(float angle){
    return mat2(cos(angle),sin(-angle),sin(angle),cos(angle));

}

void main()
{
    //parameters
    //Deformation intensity
    //deformationMode ADD/Mult
    //Apply pattern : Add/Sub/Divide/Mult/None
    //pattern intensity
    //TextureRot1 /ease no movement->movement
    //TextureRot2
    //ratio Texture/pattern
    //alpha : one block on two
    //alpha : one row on two

    vec4 inputColour = vec4(0.5,0.8,0.0,0.0);
    vec2 mouse = vec2(0.5);//iMouse.xy/iResolution.xy;
    float time = 0.0;// iTime;
    float time2 = 0.5;
    float but1 = 0.0;
    float alphaMode = 0.0;

    // Normalized pixel coordinates (from 0 to 1)
    vec2 p = uv;//fragCoord/iResolution.xy;
    p -= 0.5;




   //p.x *= iResolution.x / iResolution.y;
   p *= 5.0*(inputColour.g+0.1); //check global size

   //angle and distort
   float a = atan(p.x, p.y) + smoothstep(0.1, 1.2, sin(length(p*5.0)*20.0*pow(mouse.x, 4.0) + time2*15.0));

   float size = mix( floor((inputColour.g + 0.1)*20.0), (inputColour.g + 0.1)*20.0, but1);

   //lines
   float lines1 = smoothstep(0.0 - mouse.y, 0.0 + mouse.y, sin(a*size + time + inputColour.b*3.1415*2.0));
   float lines2 = smoothstep(0.0 - mouse.y, 0.0 + mouse.y, sin(-a*size + time + inputColour.a*3.1415*2.0));
   //circles
   float circle = smoothstep(0.0 - inputColour.r, 0.0 + inputColour.r, sin(length(p)*3.1415*5.0));
   //combine lines and circles
   float color = mix(lines1, lines2, circle);

    vec4 pattern = vec4(vec3(color), mix(1.0, color, alphaMode));

    //rotate texture
    mat2 rot1 = rotate(time/size);
    vec2 uv_tex1 = p*rot1;
    vec2 uv_tex2 = p*rotate(-time/size);;
    //vec4 tex1 = texture(iChannel0,mix(uv_tex2,uv_tex1,circle)+pattern.x*0.5);
   out_color = vec4(pattern); // tex1;//*pattern;


}